Subject: [PATCH] Improve discovery
---
Index: src/main/java/org/jbehavesupport/engine/discovery/JBehaveDiscoverer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/jbehavesupport/engine/discovery/JBehaveDiscoverer.java b/src/main/java/org/jbehavesupport/engine/discovery/JBehaveDiscoverer.java
--- a/src/main/java/org/jbehavesupport/engine/discovery/JBehaveDiscoverer.java	(revision bfa4d854a54c55862a7d6fa841eb43ba6a3d4606)
+++ b/src/main/java/org/jbehavesupport/engine/discovery/JBehaveDiscoverer.java	(date 1697549395795)
@@ -27,6 +27,10 @@
 import org.junit.platform.engine.support.descriptor.EngineDescriptor;
 import org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolver;
 
+import java.util.function.Predicate;
+
+import static java.lang.reflect.Modifier.isAbstract;
+
 public class JBehaveDiscoverer {
 
 	public EngineDescriptor discover(EngineDiscoveryRequest discoveryRequest, UniqueId uniqueId) {
@@ -37,9 +41,21 @@
 
 	private EngineDiscoveryRequestResolver<TestDescriptor> getResolver(EngineDiscoveryRequest discoveryRequest, UniqueId engineId) {
         return EngineDiscoveryRequestResolver.builder()
-            .addClassContainerSelectorResolver(JUnit5Stories.class::isAssignableFrom)
+            .addClassContainerSelectorResolver(getJBehaveClassSelector())
             .addSelectorResolver(new JBehaveSelectorResolver(discoveryRequest, engineId))
             .build();
     }
 
+    private static Predicate<Class<?>> getJBehaveClassSelector() {
+        return isCorrectClass().and(isNotAbstract());
+    }
+
+    private static Predicate<Class<?>> isNotAbstract() {
+        return clazz -> !isAbstract(clazz.getModifiers());
+    }
+
+    private static Predicate<Class<?>> isCorrectClass() {
+        return JUnit5Stories.class::isAssignableFrom;
+    }
+
 }
